{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-25T01:40:43.457734+00:00",
  "repo": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
  "labels": [
    {
      "name": "bug",
      "description": null,
      "color": "ee0701"
    },
    {
      "name": "duplicate",
      "description": null,
      "color": "cccccc"
    },
    {
      "name": "enhancement",
      "description": null,
      "color": "84b6eb"
    },
    {
      "name": "help wanted",
      "description": null,
      "color": "128A0C"
    },
    {
      "name": "invalid",
      "description": null,
      "color": "e6e6e6"
    },
    {
      "name": "question",
      "description": null,
      "color": "cc317c"
    },
    {
      "name": "wontfix",
      "description": null,
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "MDU6SXNzdWUzNDA0NzQ5MDU=",
      "title": "name the full set of pseudo RR types",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/issues/1",
      "state": "CLOSED",
      "author": "samuelweiler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "or cite some other list of them.\r\n\r\n\"...MUST NOT refer to a pseudo RR type such as \"OPT\", \"IXFR\", \"TSIG\", \"*\", etc....\"",
      "createdAt": "2018-07-12T03:16:47Z",
      "updatedAt": "2024-11-07T09:18:41Z",
      "closedAt": "2024-11-07T09:18:41Z",
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "The full set is what's defined in the IANA RR type list, plus `OPT` which somehow snuck through with an RR number (41) from the wrong range.",
          "createdAt": "2018-07-13T18:55:23Z",
          "updatedAt": "2018-07-13T18:55:23Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOA8v66c6tMcy3",
      "title": "Answer section, or Additional section?",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/issues/5",
      "state": "CLOSED",
      "author": "mstojens",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I can see it going either way, seeing as how RFC 1035 says:\n\n> The answer section contains RRs that answer the question\n> [...]\n> the additional records section contains RRs which relate to the query, but are not strictly answers for the question.\n\nOn the one hand, one could argue this draft makes the multiple RR types part of the spirit of the one question and therefore everything should go into Answers (other than those that go into the Authority section). On the other hand, only one RR type is in the actual Question section, so then the other RR type answers ought to go into the Additional section.\n\nI was not able to find any definitive guidance in the current draft on which section should contain the records that were returned based on the RR types listed in the MQType-Query option. Can you please specify which is expected? I may or may not want to know this before the 122 hackathon starts ;)",
      "createdAt": "2025-03-09T22:40:54Z",
      "updatedAt": "2025-03-12T15:09:55Z",
      "closedAt": "2025-03-12T15:09:53Z",
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "The intention is that each RR has to go in whatever section it would go into if the QTn had been the primary question.\n\n> The server MUST attempt to combine the remaining individual RRs into their respective sections\n\nIf that text is not clear enough, please suggest new text!",
          "createdAt": "2025-03-11T15:17:36Z",
          "updatedAt": "2025-03-11T15:17:36Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "NONE",
          "body": "Thanks for clarifying the intent! I've suggested some text I think will help.",
          "createdAt": "2025-03-11T16:19:31Z",
          "updatedAt": "2025-03-11T16:19:31Z"
        },
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, though I'm finding the new text both over-wordy *and* at the same time somehow insufficient (possibly due to conflation of the Additional and Authority sections in the final sentence).   It just needs to say that the RRs go wherever they would have gone if they were the primary question.\n\nI need to think on that a little more.",
          "createdAt": "2025-03-11T17:34:50Z",
          "updatedAt": "2025-03-11T17:34:50Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "NONE",
          "body": "Fair point -- how is my take two?",
          "createdAt": "2025-03-11T17:52:20Z",
          "updatedAt": "2025-03-11T17:52:20Z"
        },
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "it still had issues, e.g. there's no such thing as \"the response section\".\n\nI've added my own text in commit 7f0f1d08cc6dff32a71975fa02d93824dc1f0fb5 and closed the PR.",
          "createdAt": "2025-03-12T11:07:58Z",
          "updatedAt": "2025-03-12T11:07:58Z"
        },
        {
          "author": "mstojens",
          "authorAssociation": "NONE",
          "body": "Argh, that should have been \"each response section\" but it's irrelevant -- the text you added is great. Thanks for addressing this!",
          "createdAt": "2025-03-12T15:09:53Z",
          "updatedAt": "2025-03-12T15:09:53Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOA8v66c6uKocn",
      "title": "State that recursive resolver MUST fetch required data",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/issues/8",
      "state": "CLOSED",
      "author": "StuartCheshire",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Per discussion with Ray Bellis at IETF 122 Bangkok Hackathon, draft-ietf-dnssd-multi-qtypes should state that:\n\nA recursive resolver MUST treat a Multiple-QTYPE query as equivalent to a series of individual queries for those types, and then merge the results of those individual queries into a single combined Multiple-QTYPE response. In other words, for the primary QTYPE, and all subordinate QTYPEs in the EDNS(0) option, a recursive responder MUST generate definitive answers for every QTYPE, either from its cache, if valid positive or negative answers are available, or otherwise by querying an upstream DNS server for current answers.\n\nThis is in contrast to the behavior for QTYPE=ANY, where it is permissible to return incomplete results to the caller with no indication that some data is missing.",
      "createdAt": "2025-03-15T11:33:51Z",
      "updatedAt": "2025-03-21T05:14:15Z",
      "closedAt": "2025-03-21T05:14:14Z",
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "resolved in 411e72a42beb0a4a43cfc05957f5c6d0b33dda3f",
          "createdAt": "2025-03-21T05:14:14Z",
          "updatedAt": "2025-03-21T05:14:14Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAwODc4MjA5",
      "title": "include DNSSEC RRs for all QTn's",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/pull/2",
      "state": "CLOSED",
      "author": "samuelweiler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If some don't exist, then there will be a negative answer proof (an NSEC or NSEC3 RR).  I'm still wondering if there are weird edge cases here....",
      "createdAt": "2018-07-12T03:20:42Z",
      "updatedAt": "2024-07-25T00:45:42Z",
      "baseRepository": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
      "baseRefName": "master",
      "baseRefOid": "1e429585d3174a38123e1d565d03dab5a084abd5",
      "headRepository": "samuelweiler/draft-bellis-dnsext-multi-qtypes",
      "headRefName": "patch-1",
      "headRefOid": "80ffbfab1d246028a8a9f545bf27e6654a8d5514",
      "closedAt": "2024-07-25T00:45:41Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "this needs a little work before merging - it needs to be clear that the DNSSEC records that would be returned would be those for the QTYPE and QTn records that actually made it into the response, not all of those that were in the query.",
          "createdAt": "2018-07-13T18:52:15Z",
          "updatedAt": "2018-07-13T18:52:15Z"
        },
        {
          "author": "samuelweiler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "One of the edge cases around negative answers: assume a name with a A and AAAA record but no MX record.  QTYPE = A, QTn= MX, AAAA.\r\n\r\nAn NSEC or NSEC3 record is sent in order to prove that MX does not exist (e.g. MX).  The (misbehaving) server sends QTn = MX, AAAA in the answer.  It includes an NSEC record to prove that the MX does not exist.  It (erroneously or maliciously) does not include the AAAA record - a non-validating resolver sees this as a negative answer - a claim that the AAAA doesn't exist. But the NSEC record proves otherwise.",
          "createdAt": "2018-07-16T10:57:51Z",
          "updatedAt": "2018-07-16T10:57:51Z"
        },
        {
          "author": "vttale",
          "authorAssociation": "NONE",
          "body": "Sam, I'm unclear how your edge case scenario can be a realistic operational problem.  If the authoritative server is giving an inconsistent answer, then it's completely fair for a resolver, validating or not, to have undefined behaviour as far as how it interprets it.  \r\n",
          "createdAt": "2018-07-19T14:41:55Z",
          "updatedAt": "2018-07-19T14:41:55Z"
        },
        {
          "author": "vttale",
          "authorAssociation": "NONE",
          "body": "I do agree that types that don't exist should be proven by a relevant negative cover, which maybe Ray also intended but wasn't clear from the wording of hist \"records that would be returned ...\" comment.",
          "createdAt": "2018-07-19T14:45:39Z",
          "updatedAt": "2018-07-19T14:45:39Z"
        },
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "It's in the following paragraphs:\r\n\r\n> A negative answer from a signed zone MUST contain the appropriate authenticated denial of existence records, per {{!RFC4034}} and {{!RFC5155}}.\r\n\r\nIt could probably be made more explicit that this also applies to proof of non-existence for QTYPEs and not just the QNAME.",
          "createdAt": "2018-07-19T14:53:50Z",
          "updatedAt": "2018-07-19T14:54:37Z"
        },
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been resolved by the rewrite of section 3.2",
          "createdAt": "2024-07-25T00:45:41Z",
          "updatedAt": "2024-07-25T00:45:41Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAxMDUxNTAx",
      "title": "point at this github repo",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/pull/3",
      "state": "MERGED",
      "author": "samuelweiler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-07-12T16:05:25Z",
      "updatedAt": "2018-07-13T18:48:46Z",
      "baseRepository": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
      "baseRefName": "master",
      "baseRefOid": "1e429585d3174a38123e1d565d03dab5a084abd5",
      "headRepository": "samuelweiler/draft-bellis-dnsext-multi-qtypes",
      "headRefName": "patch-2",
      "headRefOid": "666fa67819f95134407b6816181026aa218f2c82",
      "closedAt": "2018-07-13T18:48:46Z",
      "mergedAt": "2018-07-13T18:48:46Z",
      "mergedBy": "raybellis",
      "mergeCommit": {
        "oid": "498f080e3867d9ec2700e2ab93c7e3882bff8d30"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOA8v66c52C3cG",
      "title": "Add note about non-applicability to mDNS",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/pull/4",
      "state": "MERGED",
      "author": "RemiNVG",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As this draft is being discussed in the dnssd group, one might think that it applies to mDNS queries commonly used for DNS service discovery as well, which is not actually the case. I think clarification would help; at least I was confused by that point and had to confirm by email.\r\n\r\nSome notes about the context of this draft in the dnssd WG would help as well, maybe someone else can add a bit of context around that afterwards.",
      "createdAt": "2024-07-22T05:54:51Z",
      "updatedAt": "2024-07-23T16:44:31Z",
      "baseRepository": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
      "baseRefName": "master",
      "baseRefOid": "265073503d2ac60f2b810054f9f67d212366ad90",
      "headRepository": "RemiNVG/draft-ietf-dnssd-multi-qtypes",
      "headRefName": "mdns_applicability",
      "headRefOid": "e0e4b7c890fe1e252d6e51cacfe0236967a91aaa",
      "closedAt": "2024-07-23T16:44:31Z",
      "mergedAt": "2024-07-23T16:44:31Z",
      "mergedBy": "raybellis",
      "mergeCommit": {
        "oid": "330459212dd486400fc6e44705168ee9c0698a07"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOA8v66c6CzZkj",
          "commit": {
            "abbreviatedOid": "e0e4b7c"
          },
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-23T16:42:22Z",
          "updatedAt": "2024-07-23T16:42:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOA8v66c6OMmoD",
      "title": "clarify destination sections for MQTYPE-Response RR types",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/pull/6",
      "state": "CLOSED",
      "author": "mstojens",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Addressing issue #5 ",
      "createdAt": "2025-03-11T16:18:12Z",
      "updatedAt": "2025-03-12T11:07:15Z",
      "baseRepository": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
      "baseRefName": "master",
      "baseRefOid": "a9affd6d2c67067f18e51cffe3e6e25ce95dee28",
      "headRepository": "mstojens/draft-ietf-dnssd-multi-qtypes",
      "headRefName": "patch-1",
      "headRefOid": "7a8a8e926ce6de91640b63980e0775d242433482",
      "closedAt": "2025-03-12T11:07:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "See commit 7f0f1d08cc6dff32a71975fa02d93824dc1f0fb5",
          "createdAt": "2025-03-12T11:07:03Z",
          "updatedAt": "2025-03-12T11:07:03Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOA8v66c6OWn6-",
      "title": "Unset rd and ra bits in example response from authoritative server",
      "url": "https://github.com/dnssd-wg/draft-ietf-dnssd-multi-qtypes/pull/7",
      "state": "CLOSED",
      "author": "matsduf",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It would be reasonable if the recursive resolver does not have the rd bit set and if the authoritative server does not have the ra bit set.",
      "createdAt": "2025-03-12T14:12:20Z",
      "updatedAt": "2025-03-21T05:13:51Z",
      "baseRepository": "dnssd-wg/draft-ietf-dnssd-multi-qtypes",
      "baseRefName": "master",
      "baseRefOid": "7f0f1d08cc6dff32a71975fa02d93824dc1f0fb5",
      "headRepository": "matsduf/draft-ietf-dnssd-multi-qtypes",
      "headRefName": "patch-1",
      "headRefOid": "d6a8f8638e1bf17eb4e0e634b8e94ec0961e7107",
      "closedAt": "2025-03-21T05:13:51Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "raybellis",
          "authorAssociation": "COLLABORATOR",
          "body": "resolved in 411e72a42beb0a4a43cfc05957f5c6d0b33dda3f",
          "createdAt": "2025-03-21T05:13:51Z",
          "updatedAt": "2025-03-21T05:13:51Z"
        }
      ],
      "reviews": []
    }
  ]
}